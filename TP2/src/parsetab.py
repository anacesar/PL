
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ELSE ENDBODY ENDDECL ID IF INT NOT NUM OR PRINT READ REPEAT STARTBODY STARTDECL TERMINATOR UNTILLanguage : Declarations FunctionalityDeclarations : STARTDECL BodyDecls ENDDECLFunctionality : STARTBODY Instructions ENDBODYBodyDecls : BodyDecls BodyDeclBodyDecls : BodyDecl : INT DeclDef TERMINATORDeclDef : DeclIds EnumerateDeclIds : IDDeclIds : ID '[' NUM ']'Enumerate : ',' DeclDefEnumerate : Ids : IDIds : ID '[' ID ']'Ids : ID '[' NUM ']'Instructions : Instructions InstructionInstructions : Instruction : BodyDecl Instruction : INT ID '[' ID ']' TERMINATORInstruction : Atr TERMINATORAtr : ID '=' ExpAtr : ID '[' ID ']' '=' ExpAtr : ID '[' NUM ']' '=' ExpInstruction : Repeat Instruction : IfInstruction : Print TERMINATORInstruction : Read TERMINATORIf : IF '(' Cond ')' '{' Instructions '}' ElseElse : ELSE '{' Instructions '}'Else : Repeat : REPEAT '{' Instructions '}' UNTIL '(' Cond ')'Cond : Cond OR Cond2Cond : Cond2Cond2 : Cond2 AND Cond3Cond2 : Cond3Cond3 : NOT CondCond3 : ExpRelacionalCond3 : CondCond3 : ExpRelacional : Exp '>' ExpExpRelacional : Exp '<' ExpExpRelacional : Exp '>' '=' ExpExpRelacional : Exp '<' '=' ExpExpRelacional : Exp '!' '=' ExpExpRelacional : Exp '=' '=' ExpExpRelacional : ExpExp : Exp '+' TermoExp : Exp '-' TermoExp : TermoTermo : Termo '*' FatorTermo : Termo '/' FatorTermo : FatorFator : '(' Exp ')' Fator : NUM Fator : ID Print : PRINT '(' NUM ')' Print : PRINT '(' Ids ')' Read : READ '(' Ids ')' "
    
_lr_action_items = {'STARTDECL':([0,],[3,]),'$end':([1,4,11,],[0,-1,-3,]),'STARTBODY':([2,8,],[5,-2,]),'ENDDECL':([3,6,9,38,],[-5,8,-4,-6,]),'INT':([3,5,6,7,9,12,13,17,18,31,32,33,34,38,51,95,107,111,119,120,121,123,124,125,],[-5,-16,10,14,-4,-15,-17,-23,-24,-19,-25,-26,-16,-6,14,-16,-18,14,-29,-30,-27,-16,14,-28,]),'ENDBODY':([5,7,12,13,17,18,31,32,33,38,107,119,120,121,125,],[-16,11,-15,-17,-23,-24,-19,-25,-26,-6,-18,-29,-30,-27,-28,]),'ID':([5,7,10,12,13,14,17,18,29,30,31,32,33,34,35,36,37,38,40,42,47,51,55,65,66,67,68,74,75,77,78,83,92,93,95,100,102,103,104,107,110,111,119,120,121,123,124,125,],[-16,15,27,-15,-17,28,-23,-24,43,49,-19,-25,-26,-16,43,60,60,-6,27,64,43,15,43,43,43,43,43,43,43,43,43,105,43,43,-16,43,43,43,43,-18,43,15,-29,-30,-27,-16,15,-28,]),'REPEAT':([5,7,12,13,17,18,31,32,33,34,38,51,95,107,111,119,120,121,123,124,125,],[-16,21,-15,-17,-23,-24,-19,-25,-26,-16,-6,21,-16,-18,21,-29,-30,-27,-16,21,-28,]),'IF':([5,7,12,13,17,18,31,32,33,34,38,51,95,107,111,119,120,121,123,124,125,],[-16,22,-15,-17,-23,-24,-19,-25,-26,-16,-6,22,-16,-18,22,-29,-30,-27,-16,22,-28,]),'PRINT':([5,7,12,13,17,18,31,32,33,34,38,51,95,107,111,119,120,121,123,124,125,],[-16,23,-15,-17,-23,-24,-19,-25,-26,-16,-6,23,-16,-18,23,-29,-30,-27,-16,23,-28,]),'READ':([5,7,12,13,17,18,31,32,33,34,38,51,95,107,111,119,120,121,123,124,125,],[-16,24,-15,-17,-23,-24,-19,-25,-26,-16,-6,24,-16,-18,24,-29,-30,-27,-16,24,-28,]),'}':([12,13,17,18,31,32,33,34,38,51,95,107,111,119,120,121,123,124,125,],[-15,-17,-23,-24,-19,-25,-26,-16,-6,72,-16,-18,119,-29,-30,-27,-16,125,-28,]),'=':([15,43,45,46,48,57,70,71,77,78,79,80,87,88,89,90,91,],[29,-54,-48,-51,-53,79,92,93,100,102,103,104,-46,-47,-49,-50,-52,]),'[':([15,27,28,60,],[30,41,42,83,]),'TERMINATOR':([16,19,20,25,26,27,28,39,43,44,45,46,48,62,81,82,84,85,86,87,88,89,90,91,108,109,],[31,32,33,38,-11,-8,-8,-7,-54,-20,-48,-51,-53,-10,-55,-56,-57,-9,107,-46,-47,-49,-50,-52,-21,-22,]),'{':([21,73,122,],[34,95,123,]),'(':([22,23,24,29,35,47,55,65,66,67,68,74,75,77,78,92,93,94,100,102,103,104,110,],[35,36,37,47,47,47,47,47,47,47,47,47,47,47,47,47,47,110,47,47,47,47,47,]),',':([26,27,28,85,],[40,-8,-8,-9,]),'NUM':([29,30,35,36,41,42,47,55,65,66,67,68,74,75,77,78,83,92,93,100,102,103,104,110,],[48,50,48,58,63,63,48,48,48,48,48,48,48,48,48,48,106,48,48,48,48,48,48,48,]),'NOT':([35,55,74,75,110,],[55,55,55,55,55,]),')':([35,43,45,46,48,52,53,54,55,56,57,58,59,60,61,69,74,75,76,87,88,89,90,91,96,97,98,99,101,110,112,113,114,115,116,117,118,],[-38,-54,-48,-51,-53,73,-32,-34,-38,-36,-45,81,82,-12,84,91,-38,-38,-35,-46,-47,-49,-50,-52,-37,-31,-33,-39,-40,-38,-41,-42,-44,-43,-13,-14,120,]),'OR':([35,43,45,46,48,52,53,54,55,56,57,74,75,76,87,88,89,90,91,96,97,98,99,101,110,112,113,114,115,118,],[-38,-54,-48,-51,-53,74,-32,-34,-38,-36,-45,-38,-38,74,-46,-47,-49,-50,-52,74,-31,-33,-39,-40,-38,-41,-42,-44,-43,74,]),'AND':([35,43,45,46,48,52,53,54,55,56,57,74,75,76,87,88,89,90,91,96,97,98,99,101,110,112,113,114,115,118,],[-38,-54,-48,-51,-53,-37,75,-34,-38,-36,-45,-38,-38,-35,-46,-47,-49,-50,-52,-37,75,-33,-39,-40,-38,-41,-42,-44,-43,-37,]),'*':([43,45,46,48,87,88,89,90,91,],[-54,67,-51,-53,67,67,-49,-50,-52,]),'/':([43,45,46,48,87,88,89,90,91,],[-54,68,-51,-53,68,68,-49,-50,-52,]),'+':([43,44,45,46,48,57,69,87,88,89,90,91,99,101,108,109,112,113,114,115,],[-54,65,-48,-51,-53,65,65,-46,-47,-49,-50,-52,65,65,65,65,65,65,65,65,]),'-':([43,44,45,46,48,57,69,87,88,89,90,91,99,101,108,109,112,113,114,115,],[-54,66,-48,-51,-53,66,66,-46,-47,-49,-50,-52,66,66,66,66,66,66,66,66,]),'>':([43,45,46,48,57,87,88,89,90,91,],[-54,-48,-51,-53,77,-46,-47,-49,-50,-52,]),'<':([43,45,46,48,57,87,88,89,90,91,],[-54,-48,-51,-53,78,-46,-47,-49,-50,-52,]),'!':([43,45,46,48,57,87,88,89,90,91,],[-54,-48,-51,-53,80,-46,-47,-49,-50,-52,]),']':([49,50,63,64,105,106,],[70,71,85,86,116,117,]),'UNTIL':([72,],[94,]),'ELSE':([119,],[122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Language':([0,],[1,]),'Declarations':([0,],[2,]),'Functionality':([2,],[4,]),'BodyDecls':([3,],[6,]),'Instructions':([5,34,95,123,],[7,51,111,124,]),'BodyDecl':([6,7,51,111,124,],[9,13,13,13,13,]),'Instruction':([7,51,111,124,],[12,12,12,12,]),'Atr':([7,51,111,124,],[16,16,16,16,]),'Repeat':([7,51,111,124,],[17,17,17,17,]),'If':([7,51,111,124,],[18,18,18,18,]),'Print':([7,51,111,124,],[19,19,19,19,]),'Read':([7,51,111,124,],[20,20,20,20,]),'DeclDef':([10,14,40,],[25,25,62,]),'DeclIds':([10,14,40,],[26,26,26,]),'Enumerate':([26,],[39,]),'Exp':([29,35,47,55,74,75,77,78,92,93,100,102,103,104,110,],[44,57,69,57,57,57,99,101,108,109,112,113,114,115,57,]),'Termo':([29,35,47,55,65,66,74,75,77,78,92,93,100,102,103,104,110,],[45,45,45,45,87,88,45,45,45,45,45,45,45,45,45,45,45,]),'Fator':([29,35,47,55,65,66,67,68,74,75,77,78,92,93,100,102,103,104,110,],[46,46,46,46,46,46,89,90,46,46,46,46,46,46,46,46,46,46,46,]),'Cond':([35,55,74,75,110,],[52,76,96,96,118,]),'Cond2':([35,55,74,75,110,],[53,53,97,53,53,]),'Cond3':([35,55,74,75,110,],[54,54,54,98,54,]),'ExpRelacional':([35,55,74,75,110,],[56,56,56,56,56,]),'Ids':([36,37,],[59,61,]),'Else':([119,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Language","S'",1,None,None,None),
  ('Language -> Declarations Functionality','Language',2,'p_Language','proj_yacc.py',8),
  ('Declarations -> STARTDECL BodyDecls ENDDECL','Declarations',3,'p_Declarations','proj_yacc.py',14),
  ('Functionality -> STARTBODY Instructions ENDBODY','Functionality',3,'p_Functionality','proj_yacc.py',19),
  ('BodyDecls -> BodyDecls BodyDecl','BodyDecls',2,'p_Body_Decls','proj_yacc.py',26),
  ('BodyDecls -> <empty>','BodyDecls',0,'p_Body_Decls_Body_Decl','proj_yacc.py',30),
  ('BodyDecl -> INT DeclDef TERMINATOR','BodyDecl',3,'p_Body_Decl_INT','proj_yacc.py',34),
  ('DeclDef -> DeclIds Enumerate','DeclDef',2,'p_DeclDef','proj_yacc.py',40),
  ('DeclIds -> ID','DeclIds',1,'p_DeclIds_ID','proj_yacc.py',44),
  ('DeclIds -> ID [ NUM ]','DeclIds',4,'p_DeclIds_Array','proj_yacc.py',50),
  ('Enumerate -> , DeclDef','Enumerate',2,'p_Enumerate','proj_yacc.py',57),
  ('Enumerate -> <empty>','Enumerate',0,'p_Enumerate_Empty','proj_yacc.py',62),
  ('Ids -> ID','Ids',1,'p_Ids_Int','proj_yacc.py',66),
  ('Ids -> ID [ ID ]','Ids',4,'p_Ids_ArrayID','proj_yacc.py',70),
  ('Ids -> ID [ NUM ]','Ids',4,'p_Ids_Array','proj_yacc.py',75),
  ('Instructions -> Instructions Instruction','Instructions',2,'p_Instructions','proj_yacc.py',82),
  ('Instructions -> <empty>','Instructions',0,'p_Instructions_Instruction','proj_yacc.py',86),
  ('Instruction -> BodyDecl','Instruction',1,'p_Instruction_Decl','proj_yacc.py',90),
  ('Instruction -> INT ID [ ID ] TERMINATOR','Instruction',6,'p_Instruction_DeclArrayID','proj_yacc.py',94),
  ('Instruction -> Atr TERMINATOR','Instruction',2,'p_Instruction_Atr','proj_yacc.py',99),
  ('Atr -> ID = Exp','Atr',3,'p_Atr_ID','proj_yacc.py',104),
  ('Atr -> ID [ ID ] = Exp','Atr',6,'p_Atr_IDID','proj_yacc.py',108),
  ('Atr -> ID [ NUM ] = Exp','Atr',6,'p_Atr_IDNUM','proj_yacc.py',113),
  ('Instruction -> Repeat','Instruction',1,'p_Instruction_Repeat','proj_yacc.py',117),
  ('Instruction -> If','Instruction',1,'p_Instruction_If','proj_yacc.py',121),
  ('Instruction -> Print TERMINATOR','Instruction',2,'p_Instruction_Print','proj_yacc.py',126),
  ('Instruction -> Read TERMINATOR','Instruction',2,'p_Instruction_Read','proj_yacc.py',130),
  ('If -> IF ( Cond ) { Instructions } Else','If',8,'p_If','proj_yacc.py',135),
  ('Else -> ELSE { Instructions }','Else',4,'p_Else','proj_yacc.py',139),
  ('Else -> <empty>','Else',0,'p_ElseEmpty','proj_yacc.py',143),
  ('Repeat -> REPEAT { Instructions } UNTIL ( Cond )','Repeat',8,'p_Repeat','proj_yacc.py',147),
  ('Cond -> Cond OR Cond2','Cond',3,'p_Cond_Cond','proj_yacc.py',153),
  ('Cond -> Cond2','Cond',1,'p_Cond_Cond2','proj_yacc.py',157),
  ('Cond2 -> Cond2 AND Cond3','Cond2',3,'p_Cond2','proj_yacc.py',161),
  ('Cond2 -> Cond3','Cond2',1,'p_Cond2_Cond3','proj_yacc.py',166),
  ('Cond3 -> NOT Cond','Cond3',2,'p_Cond3_Not','proj_yacc.py',170),
  ('Cond3 -> ExpRelacional','Cond3',1,'p_Cond3_ExpR','proj_yacc.py',174),
  ('Cond3 -> Cond','Cond3',1,'p_Cond3','proj_yacc.py',178),
  ('Cond3 -> <empty>','Cond3',0,'p_Cond3_Empty','proj_yacc.py',182),
  ('ExpRelacional -> Exp > Exp','ExpRelacional',3,'p_ExpRelacional_Bigger','proj_yacc.py',186),
  ('ExpRelacional -> Exp < Exp','ExpRelacional',3,'p_ExpRelacional_Lower','proj_yacc.py',191),
  ('ExpRelacional -> Exp > = Exp','ExpRelacional',4,'p_ExpRelacional_BiggerEqual','proj_yacc.py',197),
  ('ExpRelacional -> Exp < = Exp','ExpRelacional',4,'p_ExpRelacional_LowerEqual','proj_yacc.py',203),
  ('ExpRelacional -> Exp ! = Exp','ExpRelacional',4,'p_ExpRelacional_Diff','proj_yacc.py',209),
  ('ExpRelacional -> Exp = = Exp','ExpRelacional',4,'p_ExpRelacional_Equal','proj_yacc.py',215),
  ('ExpRelacional -> Exp','ExpRelacional',1,'p_ExpRelacional','proj_yacc.py',220),
  ('Exp -> Exp + Termo','Exp',3,'p_ExpPlus','proj_yacc.py',224),
  ('Exp -> Exp - Termo','Exp',3,'p_ExpMinus','proj_yacc.py',229),
  ('Exp -> Termo','Exp',1,'p_ExpTermo','proj_yacc.py',233),
  ('Termo -> Termo * Fator','Termo',3,'p_TermoMul','proj_yacc.py',237),
  ('Termo -> Termo / Fator','Termo',3,'p_TermoDiv','proj_yacc.py',241),
  ('Termo -> Fator','Termo',1,'p_TermoFator','proj_yacc.py',245),
  ('Fator -> ( Exp )','Fator',3,'p_FatorExp','proj_yacc.py',249),
  ('Fator -> NUM','Fator',1,'p_FatorNum','proj_yacc.py',254),
  ('Fator -> ID','Fator',1,'p_FatorID','proj_yacc.py',258),
  ('Print -> PRINT ( NUM )','Print',4,'p_PrintExp','proj_yacc.py',263),
  ('Print -> PRINT ( Ids )','Print',4,'p_PrintDef','proj_yacc.py',268),
  ('Read -> READ ( Ids )','Read',4,'p_Read','proj_yacc.py',273),
]
