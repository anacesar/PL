Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Language
Rule 1     Language -> Declarations Functionality
Rule 2     Declarations -> STARTDECL BodyDecls ENDDECL
Rule 3     Functionality -> STARTBODY Instructions ENDBODY
Rule 4     BodyDecls -> BodyDecls BodyDecl
Rule 5     BodyDecls -> <empty>
Rule 6     BodyDecl -> INT DeclDef TERMINATOR
Rule 7     DeclDef -> DeclIds Enumerate
Rule 8     DeclIds -> ID
Rule 9     DeclIds -> ID [ NUM ]
Rule 10    Enumerate -> , DeclDef
Rule 11    Enumerate -> <empty>
Rule 12    Ids -> ID
Rule 13    Ids -> ID [ ID ]
Rule 14    Ids -> ID [ NUM ]
Rule 15    Instructions -> Instructions Instruction
Rule 16    Instructions -> <empty>
Rule 17    Instruction -> BodyDecl
Rule 18    Instruction -> INT ID [ ID ] TERMINATOR
Rule 19    Instruction -> Atr TERMINATOR
Rule 20    Atr -> ID = Exp
Rule 21    Atr -> ID [ ID ] = Exp
Rule 22    Atr -> ID [ NUM ] = Exp
Rule 23    Instruction -> Repeat
Rule 24    Instruction -> If
Rule 25    Instruction -> Print TERMINATOR
Rule 26    Instruction -> Read TERMINATOR
Rule 27    If -> IF ( Cond ) { Instructions } Else
Rule 28    Else -> ELSE { Instructions }
Rule 29    Else -> <empty>
Rule 30    Repeat -> REPEAT { Instructions } UNTIL ( Cond )
Rule 31    Cond -> Cond OR Cond2
Rule 32    Cond -> Cond2
Rule 33    Cond2 -> Cond2 AND Cond3
Rule 34    Cond2 -> Cond3
Rule 35    Cond3 -> NOT Cond
Rule 36    Cond3 -> ExpRelacional
Rule 37    Cond3 -> Cond
Rule 38    Cond3 -> <empty>
Rule 39    ExpRelacional -> Exp > Exp
Rule 40    ExpRelacional -> Exp < Exp
Rule 41    ExpRelacional -> Exp > = Exp
Rule 42    ExpRelacional -> Exp < = Exp
Rule 43    ExpRelacional -> Exp ! = Exp
Rule 44    ExpRelacional -> Exp = = Exp
Rule 45    ExpRelacional -> Exp
Rule 46    Exp -> Exp + Termo
Rule 47    Exp -> Exp - Termo
Rule 48    Exp -> Termo
Rule 49    Termo -> Termo * Fator
Rule 50    Termo -> Termo / Fator
Rule 51    Termo -> Fator
Rule 52    Fator -> ( Exp )
Rule 53    Fator -> NUM
Rule 54    Fator -> ID
Rule 55    Print -> PRINT ( NUM )
Rule 56    Print -> PRINT ( Ids )
Rule 57    Read -> READ ( Ids )

Terminals, with rules where they appear

!                    : 43
(                    : 27 30 52 55 56 57
)                    : 27 30 52 55 56 57
*                    : 49
+                    : 46
,                    : 10
-                    : 47
/                    : 50
<                    : 40 42
=                    : 20 21 22 41 42 43 44 44
>                    : 39 41
AND                  : 33
ELSE                 : 28
ENDBODY              : 3
ENDDECL              : 2
ID                   : 8 9 12 13 13 14 18 18 20 21 21 22 54
IF                   : 27
INT                  : 6 18
NOT                  : 35
NUM                  : 9 14 22 53 55
OR                   : 31
PRINT                : 55 56
READ                 : 57
REPEAT               : 30
STARTBODY            : 3
STARTDECL            : 2
TERMINATOR           : 6 18 19 25 26
UNTIL                : 30
[                    : 9 13 14 18 21 22
]                    : 9 13 14 18 21 22
error                : 
{                    : 27 28 30
}                    : 27 28 30

Nonterminals, with rules where they appear

Atr                  : 19
BodyDecl             : 4 17
BodyDecls            : 2 4
Cond                 : 27 30 31 35 37
Cond2                : 31 32 33
Cond3                : 33 34
DeclDef              : 6 10
DeclIds              : 7
Declarations         : 1
Else                 : 27
Enumerate            : 7
Exp                  : 20 21 22 39 39 40 40 41 41 42 42 43 43 44 44 45 46 47 52
ExpRelacional        : 36
Fator                : 49 50 51
Functionality        : 1
Ids                  : 56 57
If                   : 24
Instruction          : 15
Instructions         : 3 15 27 28 30
Language             : 0
Print                : 25
Read                 : 26
Repeat               : 23
Termo                : 46 47 48 49 50

Parsing method: LALR

state 0

    (0) S' -> . Language
    (1) Language -> . Declarations Functionality
    (2) Declarations -> . STARTDECL BodyDecls ENDDECL

    STARTDECL       shift and go to state 3

    Language                       shift and go to state 1
    Declarations                   shift and go to state 2

state 1

    (0) S' -> Language .



state 2

    (1) Language -> Declarations . Functionality
    (3) Functionality -> . STARTBODY Instructions ENDBODY

    STARTBODY       shift and go to state 5

    Functionality                  shift and go to state 4

state 3

    (2) Declarations -> STARTDECL . BodyDecls ENDDECL
    (4) BodyDecls -> . BodyDecls BodyDecl
    (5) BodyDecls -> .

    ENDDECL         reduce using rule 5 (BodyDecls -> .)
    INT             reduce using rule 5 (BodyDecls -> .)

    BodyDecls                      shift and go to state 6

state 4

    (1) Language -> Declarations Functionality .

    $end            reduce using rule 1 (Language -> Declarations Functionality .)


state 5

    (3) Functionality -> STARTBODY . Instructions ENDBODY
    (15) Instructions -> . Instructions Instruction
    (16) Instructions -> .

    ENDBODY         reduce using rule 16 (Instructions -> .)
    INT             reduce using rule 16 (Instructions -> .)
    ID              reduce using rule 16 (Instructions -> .)
    REPEAT          reduce using rule 16 (Instructions -> .)
    IF              reduce using rule 16 (Instructions -> .)
    PRINT           reduce using rule 16 (Instructions -> .)
    READ            reduce using rule 16 (Instructions -> .)

    Instructions                   shift and go to state 7

state 6

    (2) Declarations -> STARTDECL BodyDecls . ENDDECL
    (4) BodyDecls -> BodyDecls . BodyDecl
    (6) BodyDecl -> . INT DeclDef TERMINATOR

    ENDDECL         shift and go to state 8
    INT             shift and go to state 10

    BodyDecl                       shift and go to state 9

state 7

    (3) Functionality -> STARTBODY Instructions . ENDBODY
    (15) Instructions -> Instructions . Instruction
    (17) Instruction -> . BodyDecl
    (18) Instruction -> . INT ID [ ID ] TERMINATOR
    (19) Instruction -> . Atr TERMINATOR
    (23) Instruction -> . Repeat
    (24) Instruction -> . If
    (25) Instruction -> . Print TERMINATOR
    (26) Instruction -> . Read TERMINATOR
    (6) BodyDecl -> . INT DeclDef TERMINATOR
    (20) Atr -> . ID = Exp
    (21) Atr -> . ID [ ID ] = Exp
    (22) Atr -> . ID [ NUM ] = Exp
    (30) Repeat -> . REPEAT { Instructions } UNTIL ( Cond )
    (27) If -> . IF ( Cond ) { Instructions } Else
    (55) Print -> . PRINT ( NUM )
    (56) Print -> . PRINT ( Ids )
    (57) Read -> . READ ( Ids )

    ENDBODY         shift and go to state 11
    INT             shift and go to state 14
    ID              shift and go to state 15
    REPEAT          shift and go to state 21
    IF              shift and go to state 22
    PRINT           shift and go to state 23
    READ            shift and go to state 24

    Instruction                    shift and go to state 12
    BodyDecl                       shift and go to state 13
    Atr                            shift and go to state 16
    Repeat                         shift and go to state 17
    If                             shift and go to state 18
    Print                          shift and go to state 19
    Read                           shift and go to state 20

state 8

    (2) Declarations -> STARTDECL BodyDecls ENDDECL .

    STARTBODY       reduce using rule 2 (Declarations -> STARTDECL BodyDecls ENDDECL .)


state 9

    (4) BodyDecls -> BodyDecls BodyDecl .

    ENDDECL         reduce using rule 4 (BodyDecls -> BodyDecls BodyDecl .)
    INT             reduce using rule 4 (BodyDecls -> BodyDecls BodyDecl .)


state 10

    (6) BodyDecl -> INT . DeclDef TERMINATOR
    (7) DeclDef -> . DeclIds Enumerate
    (8) DeclIds -> . ID
    (9) DeclIds -> . ID [ NUM ]

    ID              shift and go to state 27

    DeclDef                        shift and go to state 25
    DeclIds                        shift and go to state 26

state 11

    (3) Functionality -> STARTBODY Instructions ENDBODY .

    $end            reduce using rule 3 (Functionality -> STARTBODY Instructions ENDBODY .)


state 12

    (15) Instructions -> Instructions Instruction .

    ENDBODY         reduce using rule 15 (Instructions -> Instructions Instruction .)
    INT             reduce using rule 15 (Instructions -> Instructions Instruction .)
    ID              reduce using rule 15 (Instructions -> Instructions Instruction .)
    REPEAT          reduce using rule 15 (Instructions -> Instructions Instruction .)
    IF              reduce using rule 15 (Instructions -> Instructions Instruction .)
    PRINT           reduce using rule 15 (Instructions -> Instructions Instruction .)
    READ            reduce using rule 15 (Instructions -> Instructions Instruction .)
    }               reduce using rule 15 (Instructions -> Instructions Instruction .)


state 13

    (17) Instruction -> BodyDecl .

    ENDBODY         reduce using rule 17 (Instruction -> BodyDecl .)
    INT             reduce using rule 17 (Instruction -> BodyDecl .)
    ID              reduce using rule 17 (Instruction -> BodyDecl .)
    REPEAT          reduce using rule 17 (Instruction -> BodyDecl .)
    IF              reduce using rule 17 (Instruction -> BodyDecl .)
    PRINT           reduce using rule 17 (Instruction -> BodyDecl .)
    READ            reduce using rule 17 (Instruction -> BodyDecl .)
    }               reduce using rule 17 (Instruction -> BodyDecl .)


state 14

    (18) Instruction -> INT . ID [ ID ] TERMINATOR
    (6) BodyDecl -> INT . DeclDef TERMINATOR
    (7) DeclDef -> . DeclIds Enumerate
    (8) DeclIds -> . ID
    (9) DeclIds -> . ID [ NUM ]

    ID              shift and go to state 28

    DeclDef                        shift and go to state 25
    DeclIds                        shift and go to state 26

state 15

    (20) Atr -> ID . = Exp
    (21) Atr -> ID . [ ID ] = Exp
    (22) Atr -> ID . [ NUM ] = Exp

    =               shift and go to state 29
    [               shift and go to state 30


state 16

    (19) Instruction -> Atr . TERMINATOR

    TERMINATOR      shift and go to state 31


state 17

    (23) Instruction -> Repeat .

    ENDBODY         reduce using rule 23 (Instruction -> Repeat .)
    INT             reduce using rule 23 (Instruction -> Repeat .)
    ID              reduce using rule 23 (Instruction -> Repeat .)
    REPEAT          reduce using rule 23 (Instruction -> Repeat .)
    IF              reduce using rule 23 (Instruction -> Repeat .)
    PRINT           reduce using rule 23 (Instruction -> Repeat .)
    READ            reduce using rule 23 (Instruction -> Repeat .)
    }               reduce using rule 23 (Instruction -> Repeat .)


state 18

    (24) Instruction -> If .

    ENDBODY         reduce using rule 24 (Instruction -> If .)
    INT             reduce using rule 24 (Instruction -> If .)
    ID              reduce using rule 24 (Instruction -> If .)
    REPEAT          reduce using rule 24 (Instruction -> If .)
    IF              reduce using rule 24 (Instruction -> If .)
    PRINT           reduce using rule 24 (Instruction -> If .)
    READ            reduce using rule 24 (Instruction -> If .)
    }               reduce using rule 24 (Instruction -> If .)


state 19

    (25) Instruction -> Print . TERMINATOR

    TERMINATOR      shift and go to state 32


state 20

    (26) Instruction -> Read . TERMINATOR

    TERMINATOR      shift and go to state 33


state 21

    (30) Repeat -> REPEAT . { Instructions } UNTIL ( Cond )

    {               shift and go to state 34


state 22

    (27) If -> IF . ( Cond ) { Instructions } Else

    (               shift and go to state 35


state 23

    (55) Print -> PRINT . ( NUM )
    (56) Print -> PRINT . ( Ids )

    (               shift and go to state 36


state 24

    (57) Read -> READ . ( Ids )

    (               shift and go to state 37


state 25

    (6) BodyDecl -> INT DeclDef . TERMINATOR

    TERMINATOR      shift and go to state 38


state 26

    (7) DeclDef -> DeclIds . Enumerate
    (10) Enumerate -> . , DeclDef
    (11) Enumerate -> .

    ,               shift and go to state 40
    TERMINATOR      reduce using rule 11 (Enumerate -> .)

    Enumerate                      shift and go to state 39

state 27

    (8) DeclIds -> ID .
    (9) DeclIds -> ID . [ NUM ]

    ,               reduce using rule 8 (DeclIds -> ID .)
    TERMINATOR      reduce using rule 8 (DeclIds -> ID .)
    [               shift and go to state 41


state 28

    (18) Instruction -> INT ID . [ ID ] TERMINATOR
    (8) DeclIds -> ID .
    (9) DeclIds -> ID . [ NUM ]

    [               shift and go to state 42
    ,               reduce using rule 8 (DeclIds -> ID .)
    TERMINATOR      reduce using rule 8 (DeclIds -> ID .)


state 29

    (20) Atr -> ID = . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 44
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 30

    (21) Atr -> ID [ . ID ] = Exp
    (22) Atr -> ID [ . NUM ] = Exp

    ID              shift and go to state 49
    NUM             shift and go to state 50


state 31

    (19) Instruction -> Atr TERMINATOR .

    ENDBODY         reduce using rule 19 (Instruction -> Atr TERMINATOR .)
    INT             reduce using rule 19 (Instruction -> Atr TERMINATOR .)
    ID              reduce using rule 19 (Instruction -> Atr TERMINATOR .)
    REPEAT          reduce using rule 19 (Instruction -> Atr TERMINATOR .)
    IF              reduce using rule 19 (Instruction -> Atr TERMINATOR .)
    PRINT           reduce using rule 19 (Instruction -> Atr TERMINATOR .)
    READ            reduce using rule 19 (Instruction -> Atr TERMINATOR .)
    }               reduce using rule 19 (Instruction -> Atr TERMINATOR .)


state 32

    (25) Instruction -> Print TERMINATOR .

    ENDBODY         reduce using rule 25 (Instruction -> Print TERMINATOR .)
    INT             reduce using rule 25 (Instruction -> Print TERMINATOR .)
    ID              reduce using rule 25 (Instruction -> Print TERMINATOR .)
    REPEAT          reduce using rule 25 (Instruction -> Print TERMINATOR .)
    IF              reduce using rule 25 (Instruction -> Print TERMINATOR .)
    PRINT           reduce using rule 25 (Instruction -> Print TERMINATOR .)
    READ            reduce using rule 25 (Instruction -> Print TERMINATOR .)
    }               reduce using rule 25 (Instruction -> Print TERMINATOR .)


state 33

    (26) Instruction -> Read TERMINATOR .

    ENDBODY         reduce using rule 26 (Instruction -> Read TERMINATOR .)
    INT             reduce using rule 26 (Instruction -> Read TERMINATOR .)
    ID              reduce using rule 26 (Instruction -> Read TERMINATOR .)
    REPEAT          reduce using rule 26 (Instruction -> Read TERMINATOR .)
    IF              reduce using rule 26 (Instruction -> Read TERMINATOR .)
    PRINT           reduce using rule 26 (Instruction -> Read TERMINATOR .)
    READ            reduce using rule 26 (Instruction -> Read TERMINATOR .)
    }               reduce using rule 26 (Instruction -> Read TERMINATOR .)


state 34

    (30) Repeat -> REPEAT { . Instructions } UNTIL ( Cond )
    (15) Instructions -> . Instructions Instruction
    (16) Instructions -> .

    }               reduce using rule 16 (Instructions -> .)
    INT             reduce using rule 16 (Instructions -> .)
    ID              reduce using rule 16 (Instructions -> .)
    REPEAT          reduce using rule 16 (Instructions -> .)
    IF              reduce using rule 16 (Instructions -> .)
    PRINT           reduce using rule 16 (Instructions -> .)
    READ            reduce using rule 16 (Instructions -> .)

    Instructions                   shift and go to state 51

state 35

    (27) If -> IF ( . Cond ) { Instructions } Else
    (31) Cond -> . Cond OR Cond2
    (32) Cond -> . Cond2
    (33) Cond2 -> . Cond2 AND Cond3
    (34) Cond2 -> . Cond3
    (35) Cond3 -> . NOT Cond
    (36) Cond3 -> . ExpRelacional
    (37) Cond3 -> . Cond
    (38) Cond3 -> .
    (39) ExpRelacional -> . Exp > Exp
    (40) ExpRelacional -> . Exp < Exp
    (41) ExpRelacional -> . Exp > = Exp
    (42) ExpRelacional -> . Exp < = Exp
    (43) ExpRelacional -> . Exp ! = Exp
    (44) ExpRelacional -> . Exp = = Exp
    (45) ExpRelacional -> . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    NOT             shift and go to state 55
    )               reduce using rule 38 (Cond3 -> .)
    OR              reduce using rule 38 (Cond3 -> .)
    AND             reduce using rule 38 (Cond3 -> .)
    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Cond                           shift and go to state 52
    Cond2                          shift and go to state 53
    Cond3                          shift and go to state 54
    ExpRelacional                  shift and go to state 56
    Exp                            shift and go to state 57
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 36

    (55) Print -> PRINT ( . NUM )
    (56) Print -> PRINT ( . Ids )
    (12) Ids -> . ID
    (13) Ids -> . ID [ ID ]
    (14) Ids -> . ID [ NUM ]

    NUM             shift and go to state 58
    ID              shift and go to state 60

    Ids                            shift and go to state 59

state 37

    (57) Read -> READ ( . Ids )
    (12) Ids -> . ID
    (13) Ids -> . ID [ ID ]
    (14) Ids -> . ID [ NUM ]

    ID              shift and go to state 60

    Ids                            shift and go to state 61

state 38

    (6) BodyDecl -> INT DeclDef TERMINATOR .

    ENDDECL         reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    INT             reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    ENDBODY         reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    ID              reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    REPEAT          reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    IF              reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    PRINT           reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    READ            reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)
    }               reduce using rule 6 (BodyDecl -> INT DeclDef TERMINATOR .)


state 39

    (7) DeclDef -> DeclIds Enumerate .

    TERMINATOR      reduce using rule 7 (DeclDef -> DeclIds Enumerate .)


state 40

    (10) Enumerate -> , . DeclDef
    (7) DeclDef -> . DeclIds Enumerate
    (8) DeclIds -> . ID
    (9) DeclIds -> . ID [ NUM ]

    ID              shift and go to state 27

    DeclDef                        shift and go to state 62
    DeclIds                        shift and go to state 26

state 41

    (9) DeclIds -> ID [ . NUM ]

    NUM             shift and go to state 63


state 42

    (18) Instruction -> INT ID [ . ID ] TERMINATOR
    (9) DeclIds -> ID [ . NUM ]

    ID              shift and go to state 64
    NUM             shift and go to state 63


state 43

    (54) Fator -> ID .

    *               reduce using rule 54 (Fator -> ID .)
    /               reduce using rule 54 (Fator -> ID .)
    +               reduce using rule 54 (Fator -> ID .)
    -               reduce using rule 54 (Fator -> ID .)
    TERMINATOR      reduce using rule 54 (Fator -> ID .)
    >               reduce using rule 54 (Fator -> ID .)
    <               reduce using rule 54 (Fator -> ID .)
    !               reduce using rule 54 (Fator -> ID .)
    =               reduce using rule 54 (Fator -> ID .)
    )               reduce using rule 54 (Fator -> ID .)
    OR              reduce using rule 54 (Fator -> ID .)
    AND             reduce using rule 54 (Fator -> ID .)


state 44

    (20) Atr -> ID = Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    TERMINATOR      reduce using rule 20 (Atr -> ID = Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 45

    (48) Exp -> Termo .
    (49) Termo -> Termo . * Fator
    (50) Termo -> Termo . / Fator

    +               reduce using rule 48 (Exp -> Termo .)
    -               reduce using rule 48 (Exp -> Termo .)
    TERMINATOR      reduce using rule 48 (Exp -> Termo .)
    >               reduce using rule 48 (Exp -> Termo .)
    <               reduce using rule 48 (Exp -> Termo .)
    !               reduce using rule 48 (Exp -> Termo .)
    =               reduce using rule 48 (Exp -> Termo .)
    )               reduce using rule 48 (Exp -> Termo .)
    OR              reduce using rule 48 (Exp -> Termo .)
    AND             reduce using rule 48 (Exp -> Termo .)
    *               shift and go to state 67
    /               shift and go to state 68


state 46

    (51) Termo -> Fator .

    *               reduce using rule 51 (Termo -> Fator .)
    /               reduce using rule 51 (Termo -> Fator .)
    +               reduce using rule 51 (Termo -> Fator .)
    -               reduce using rule 51 (Termo -> Fator .)
    TERMINATOR      reduce using rule 51 (Termo -> Fator .)
    >               reduce using rule 51 (Termo -> Fator .)
    <               reduce using rule 51 (Termo -> Fator .)
    !               reduce using rule 51 (Termo -> Fator .)
    =               reduce using rule 51 (Termo -> Fator .)
    )               reduce using rule 51 (Termo -> Fator .)
    OR              reduce using rule 51 (Termo -> Fator .)
    AND             reduce using rule 51 (Termo -> Fator .)


state 47

    (52) Fator -> ( . Exp )
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 69
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 48

    (53) Fator -> NUM .

    *               reduce using rule 53 (Fator -> NUM .)
    /               reduce using rule 53 (Fator -> NUM .)
    +               reduce using rule 53 (Fator -> NUM .)
    -               reduce using rule 53 (Fator -> NUM .)
    TERMINATOR      reduce using rule 53 (Fator -> NUM .)
    >               reduce using rule 53 (Fator -> NUM .)
    <               reduce using rule 53 (Fator -> NUM .)
    !               reduce using rule 53 (Fator -> NUM .)
    =               reduce using rule 53 (Fator -> NUM .)
    )               reduce using rule 53 (Fator -> NUM .)
    OR              reduce using rule 53 (Fator -> NUM .)
    AND             reduce using rule 53 (Fator -> NUM .)


state 49

    (21) Atr -> ID [ ID . ] = Exp

    ]               shift and go to state 70


state 50

    (22) Atr -> ID [ NUM . ] = Exp

    ]               shift and go to state 71


state 51

    (30) Repeat -> REPEAT { Instructions . } UNTIL ( Cond )
    (15) Instructions -> Instructions . Instruction
    (17) Instruction -> . BodyDecl
    (18) Instruction -> . INT ID [ ID ] TERMINATOR
    (19) Instruction -> . Atr TERMINATOR
    (23) Instruction -> . Repeat
    (24) Instruction -> . If
    (25) Instruction -> . Print TERMINATOR
    (26) Instruction -> . Read TERMINATOR
    (6) BodyDecl -> . INT DeclDef TERMINATOR
    (20) Atr -> . ID = Exp
    (21) Atr -> . ID [ ID ] = Exp
    (22) Atr -> . ID [ NUM ] = Exp
    (30) Repeat -> . REPEAT { Instructions } UNTIL ( Cond )
    (27) If -> . IF ( Cond ) { Instructions } Else
    (55) Print -> . PRINT ( NUM )
    (56) Print -> . PRINT ( Ids )
    (57) Read -> . READ ( Ids )

    }               shift and go to state 72
    INT             shift and go to state 14
    ID              shift and go to state 15
    REPEAT          shift and go to state 21
    IF              shift and go to state 22
    PRINT           shift and go to state 23
    READ            shift and go to state 24

    Instruction                    shift and go to state 12
    BodyDecl                       shift and go to state 13
    Atr                            shift and go to state 16
    Repeat                         shift and go to state 17
    If                             shift and go to state 18
    Print                          shift and go to state 19
    Read                           shift and go to state 20

state 52

    (27) If -> IF ( Cond . ) { Instructions } Else
    (31) Cond -> Cond . OR Cond2
    (37) Cond3 -> Cond .

  ! shift/reduce conflict for ) resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               shift and go to state 73
    OR              shift and go to state 74
    AND             reduce using rule 37 (Cond3 -> Cond .)

  ! )               [ reduce using rule 37 (Cond3 -> Cond .) ]
  ! OR              [ reduce using rule 37 (Cond3 -> Cond .) ]


state 53

    (32) Cond -> Cond2 .
    (33) Cond2 -> Cond2 . AND Cond3

  ! shift/reduce conflict for AND resolved as shift
    )               reduce using rule 32 (Cond -> Cond2 .)
    OR              reduce using rule 32 (Cond -> Cond2 .)
    AND             shift and go to state 75

  ! AND             [ reduce using rule 32 (Cond -> Cond2 .) ]


state 54

    (34) Cond2 -> Cond3 .

    )               reduce using rule 34 (Cond2 -> Cond3 .)
    OR              reduce using rule 34 (Cond2 -> Cond3 .)
    AND             reduce using rule 34 (Cond2 -> Cond3 .)


state 55

    (35) Cond3 -> NOT . Cond
    (31) Cond -> . Cond OR Cond2
    (32) Cond -> . Cond2
    (33) Cond2 -> . Cond2 AND Cond3
    (34) Cond2 -> . Cond3
    (35) Cond3 -> . NOT Cond
    (36) Cond3 -> . ExpRelacional
    (37) Cond3 -> . Cond
    (38) Cond3 -> .
    (39) ExpRelacional -> . Exp > Exp
    (40) ExpRelacional -> . Exp < Exp
    (41) ExpRelacional -> . Exp > = Exp
    (42) ExpRelacional -> . Exp < = Exp
    (43) ExpRelacional -> . Exp ! = Exp
    (44) ExpRelacional -> . Exp = = Exp
    (45) ExpRelacional -> . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    NOT             shift and go to state 55
    OR              reduce using rule 38 (Cond3 -> .)
    )               reduce using rule 38 (Cond3 -> .)
    AND             reduce using rule 38 (Cond3 -> .)
    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Cond                           shift and go to state 76
    Cond2                          shift and go to state 53
    Cond3                          shift and go to state 54
    ExpRelacional                  shift and go to state 56
    Exp                            shift and go to state 57
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 56

    (36) Cond3 -> ExpRelacional .

    )               reduce using rule 36 (Cond3 -> ExpRelacional .)
    OR              reduce using rule 36 (Cond3 -> ExpRelacional .)
    AND             reduce using rule 36 (Cond3 -> ExpRelacional .)


state 57

    (39) ExpRelacional -> Exp . > Exp
    (40) ExpRelacional -> Exp . < Exp
    (41) ExpRelacional -> Exp . > = Exp
    (42) ExpRelacional -> Exp . < = Exp
    (43) ExpRelacional -> Exp . ! = Exp
    (44) ExpRelacional -> Exp . = = Exp
    (45) ExpRelacional -> Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    >               shift and go to state 77
    <               shift and go to state 78
    !               shift and go to state 80
    =               shift and go to state 79
    )               reduce using rule 45 (ExpRelacional -> Exp .)
    OR              reduce using rule 45 (ExpRelacional -> Exp .)
    AND             reduce using rule 45 (ExpRelacional -> Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 58

    (55) Print -> PRINT ( NUM . )

    )               shift and go to state 81


state 59

    (56) Print -> PRINT ( Ids . )

    )               shift and go to state 82


state 60

    (12) Ids -> ID .
    (13) Ids -> ID . [ ID ]
    (14) Ids -> ID . [ NUM ]

    )               reduce using rule 12 (Ids -> ID .)
    [               shift and go to state 83


state 61

    (57) Read -> READ ( Ids . )

    )               shift and go to state 84


state 62

    (10) Enumerate -> , DeclDef .

    TERMINATOR      reduce using rule 10 (Enumerate -> , DeclDef .)


state 63

    (9) DeclIds -> ID [ NUM . ]

    ]               shift and go to state 85


state 64

    (18) Instruction -> INT ID [ ID . ] TERMINATOR

    ]               shift and go to state 86


state 65

    (46) Exp -> Exp + . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Termo                          shift and go to state 87
    Fator                          shift and go to state 46

state 66

    (47) Exp -> Exp - . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Termo                          shift and go to state 88
    Fator                          shift and go to state 46

state 67

    (49) Termo -> Termo * . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Fator                          shift and go to state 89

state 68

    (50) Termo -> Termo / . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Fator                          shift and go to state 90

state 69

    (52) Fator -> ( Exp . )
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    )               shift and go to state 91
    +               shift and go to state 65
    -               shift and go to state 66


state 70

    (21) Atr -> ID [ ID ] . = Exp

    =               shift and go to state 92


state 71

    (22) Atr -> ID [ NUM ] . = Exp

    =               shift and go to state 93


state 72

    (30) Repeat -> REPEAT { Instructions } . UNTIL ( Cond )

    UNTIL           shift and go to state 94


state 73

    (27) If -> IF ( Cond ) . { Instructions } Else

    {               shift and go to state 95


state 74

    (31) Cond -> Cond OR . Cond2
    (33) Cond2 -> . Cond2 AND Cond3
    (34) Cond2 -> . Cond3
    (35) Cond3 -> . NOT Cond
    (36) Cond3 -> . ExpRelacional
    (37) Cond3 -> . Cond
    (38) Cond3 -> .
    (39) ExpRelacional -> . Exp > Exp
    (40) ExpRelacional -> . Exp < Exp
    (41) ExpRelacional -> . Exp > = Exp
    (42) ExpRelacional -> . Exp < = Exp
    (43) ExpRelacional -> . Exp ! = Exp
    (44) ExpRelacional -> . Exp = = Exp
    (45) ExpRelacional -> . Exp
    (31) Cond -> . Cond OR Cond2
    (32) Cond -> . Cond2
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    NOT             shift and go to state 55
    OR              reduce using rule 38 (Cond3 -> .)
    )               reduce using rule 38 (Cond3 -> .)
    AND             reduce using rule 38 (Cond3 -> .)
    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Cond                           shift and go to state 96
    Cond2                          shift and go to state 97
    Cond3                          shift and go to state 54
    ExpRelacional                  shift and go to state 56
    Exp                            shift and go to state 57
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 75

    (33) Cond2 -> Cond2 AND . Cond3
    (35) Cond3 -> . NOT Cond
    (36) Cond3 -> . ExpRelacional
    (37) Cond3 -> . Cond
    (38) Cond3 -> .
    (39) ExpRelacional -> . Exp > Exp
    (40) ExpRelacional -> . Exp < Exp
    (41) ExpRelacional -> . Exp > = Exp
    (42) ExpRelacional -> . Exp < = Exp
    (43) ExpRelacional -> . Exp ! = Exp
    (44) ExpRelacional -> . Exp = = Exp
    (45) ExpRelacional -> . Exp
    (31) Cond -> . Cond OR Cond2
    (32) Cond -> . Cond2
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (33) Cond2 -> . Cond2 AND Cond3
    (34) Cond2 -> . Cond3
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    NOT             shift and go to state 55
    OR              reduce using rule 38 (Cond3 -> .)
    )               reduce using rule 38 (Cond3 -> .)
    AND             reduce using rule 38 (Cond3 -> .)
    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Cond2                          shift and go to state 53
    Cond3                          shift and go to state 98
    Cond                           shift and go to state 96
    ExpRelacional                  shift and go to state 56
    Exp                            shift and go to state 57
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 76

    (35) Cond3 -> NOT Cond .
    (31) Cond -> Cond . OR Cond2
    (37) Cond3 -> Cond .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for ) resolved using rule 35 (Cond3 -> NOT Cond .)
  ! reduce/reduce conflict for AND resolved using rule 35 (Cond3 -> NOT Cond .)
    )               reduce using rule 35 (Cond3 -> NOT Cond .)
    AND             reduce using rule 35 (Cond3 -> NOT Cond .)
    OR              shift and go to state 74

  ! OR              [ reduce using rule 35 (Cond3 -> NOT Cond .) ]
  ! OR              [ reduce using rule 37 (Cond3 -> Cond .) ]
  ! )               [ reduce using rule 37 (Cond3 -> Cond .) ]
  ! AND             [ reduce using rule 37 (Cond3 -> Cond .) ]


state 77

    (39) ExpRelacional -> Exp > . Exp
    (41) ExpRelacional -> Exp > . = Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    =               shift and go to state 100
    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 99
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 78

    (40) ExpRelacional -> Exp < . Exp
    (42) ExpRelacional -> Exp < . = Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    =               shift and go to state 102
    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 101
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 79

    (44) ExpRelacional -> Exp = . = Exp

    =               shift and go to state 103


state 80

    (43) ExpRelacional -> Exp ! . = Exp

    =               shift and go to state 104


state 81

    (55) Print -> PRINT ( NUM ) .

    TERMINATOR      reduce using rule 55 (Print -> PRINT ( NUM ) .)


state 82

    (56) Print -> PRINT ( Ids ) .

    TERMINATOR      reduce using rule 56 (Print -> PRINT ( Ids ) .)


state 83

    (13) Ids -> ID [ . ID ]
    (14) Ids -> ID [ . NUM ]

    ID              shift and go to state 105
    NUM             shift and go to state 106


state 84

    (57) Read -> READ ( Ids ) .

    TERMINATOR      reduce using rule 57 (Read -> READ ( Ids ) .)


state 85

    (9) DeclIds -> ID [ NUM ] .

    ,               reduce using rule 9 (DeclIds -> ID [ NUM ] .)
    TERMINATOR      reduce using rule 9 (DeclIds -> ID [ NUM ] .)


state 86

    (18) Instruction -> INT ID [ ID ] . TERMINATOR

    TERMINATOR      shift and go to state 107


state 87

    (46) Exp -> Exp + Termo .
    (49) Termo -> Termo . * Fator
    (50) Termo -> Termo . / Fator

    +               reduce using rule 46 (Exp -> Exp + Termo .)
    -               reduce using rule 46 (Exp -> Exp + Termo .)
    TERMINATOR      reduce using rule 46 (Exp -> Exp + Termo .)
    >               reduce using rule 46 (Exp -> Exp + Termo .)
    <               reduce using rule 46 (Exp -> Exp + Termo .)
    !               reduce using rule 46 (Exp -> Exp + Termo .)
    =               reduce using rule 46 (Exp -> Exp + Termo .)
    )               reduce using rule 46 (Exp -> Exp + Termo .)
    OR              reduce using rule 46 (Exp -> Exp + Termo .)
    AND             reduce using rule 46 (Exp -> Exp + Termo .)
    *               shift and go to state 67
    /               shift and go to state 68


state 88

    (47) Exp -> Exp - Termo .
    (49) Termo -> Termo . * Fator
    (50) Termo -> Termo . / Fator

    +               reduce using rule 47 (Exp -> Exp - Termo .)
    -               reduce using rule 47 (Exp -> Exp - Termo .)
    TERMINATOR      reduce using rule 47 (Exp -> Exp - Termo .)
    >               reduce using rule 47 (Exp -> Exp - Termo .)
    <               reduce using rule 47 (Exp -> Exp - Termo .)
    !               reduce using rule 47 (Exp -> Exp - Termo .)
    =               reduce using rule 47 (Exp -> Exp - Termo .)
    )               reduce using rule 47 (Exp -> Exp - Termo .)
    OR              reduce using rule 47 (Exp -> Exp - Termo .)
    AND             reduce using rule 47 (Exp -> Exp - Termo .)
    *               shift and go to state 67
    /               shift and go to state 68


state 89

    (49) Termo -> Termo * Fator .

    *               reduce using rule 49 (Termo -> Termo * Fator .)
    /               reduce using rule 49 (Termo -> Termo * Fator .)
    +               reduce using rule 49 (Termo -> Termo * Fator .)
    -               reduce using rule 49 (Termo -> Termo * Fator .)
    TERMINATOR      reduce using rule 49 (Termo -> Termo * Fator .)
    >               reduce using rule 49 (Termo -> Termo * Fator .)
    <               reduce using rule 49 (Termo -> Termo * Fator .)
    !               reduce using rule 49 (Termo -> Termo * Fator .)
    =               reduce using rule 49 (Termo -> Termo * Fator .)
    )               reduce using rule 49 (Termo -> Termo * Fator .)
    OR              reduce using rule 49 (Termo -> Termo * Fator .)
    AND             reduce using rule 49 (Termo -> Termo * Fator .)


state 90

    (50) Termo -> Termo / Fator .

    *               reduce using rule 50 (Termo -> Termo / Fator .)
    /               reduce using rule 50 (Termo -> Termo / Fator .)
    +               reduce using rule 50 (Termo -> Termo / Fator .)
    -               reduce using rule 50 (Termo -> Termo / Fator .)
    TERMINATOR      reduce using rule 50 (Termo -> Termo / Fator .)
    >               reduce using rule 50 (Termo -> Termo / Fator .)
    <               reduce using rule 50 (Termo -> Termo / Fator .)
    !               reduce using rule 50 (Termo -> Termo / Fator .)
    =               reduce using rule 50 (Termo -> Termo / Fator .)
    )               reduce using rule 50 (Termo -> Termo / Fator .)
    OR              reduce using rule 50 (Termo -> Termo / Fator .)
    AND             reduce using rule 50 (Termo -> Termo / Fator .)


state 91

    (52) Fator -> ( Exp ) .

    *               reduce using rule 52 (Fator -> ( Exp ) .)
    /               reduce using rule 52 (Fator -> ( Exp ) .)
    +               reduce using rule 52 (Fator -> ( Exp ) .)
    -               reduce using rule 52 (Fator -> ( Exp ) .)
    TERMINATOR      reduce using rule 52 (Fator -> ( Exp ) .)
    >               reduce using rule 52 (Fator -> ( Exp ) .)
    <               reduce using rule 52 (Fator -> ( Exp ) .)
    !               reduce using rule 52 (Fator -> ( Exp ) .)
    =               reduce using rule 52 (Fator -> ( Exp ) .)
    )               reduce using rule 52 (Fator -> ( Exp ) .)
    OR              reduce using rule 52 (Fator -> ( Exp ) .)
    AND             reduce using rule 52 (Fator -> ( Exp ) .)


state 92

    (21) Atr -> ID [ ID ] = . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 108
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 93

    (22) Atr -> ID [ NUM ] = . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 109
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 94

    (30) Repeat -> REPEAT { Instructions } UNTIL . ( Cond )

    (               shift and go to state 110


state 95

    (27) If -> IF ( Cond ) { . Instructions } Else
    (15) Instructions -> . Instructions Instruction
    (16) Instructions -> .

    }               reduce using rule 16 (Instructions -> .)
    INT             reduce using rule 16 (Instructions -> .)
    ID              reduce using rule 16 (Instructions -> .)
    REPEAT          reduce using rule 16 (Instructions -> .)
    IF              reduce using rule 16 (Instructions -> .)
    PRINT           reduce using rule 16 (Instructions -> .)
    READ            reduce using rule 16 (Instructions -> .)

    Instructions                   shift and go to state 111

state 96

    (37) Cond3 -> Cond .
    (31) Cond -> Cond . OR Cond2

  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 37 (Cond3 -> Cond .)
    AND             reduce using rule 37 (Cond3 -> Cond .)
    OR              shift and go to state 74

  ! OR              [ reduce using rule 37 (Cond3 -> Cond .) ]


state 97

    (31) Cond -> Cond OR Cond2 .
    (33) Cond2 -> Cond2 . AND Cond3
    (32) Cond -> Cond2 .

  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for OR resolved using rule 31 (Cond -> Cond OR Cond2 .)
  ! reduce/reduce conflict for ) resolved using rule 31 (Cond -> Cond OR Cond2 .)
  ! shift/reduce conflict for AND resolved as shift
    )               reduce using rule 31 (Cond -> Cond OR Cond2 .)
    OR              reduce using rule 31 (Cond -> Cond OR Cond2 .)
    AND             shift and go to state 75

  ! AND             [ reduce using rule 31 (Cond -> Cond OR Cond2 .) ]
  ! OR              [ reduce using rule 32 (Cond -> Cond2 .) ]
  ! )               [ reduce using rule 32 (Cond -> Cond2 .) ]
  ! AND             [ reduce using rule 32 (Cond -> Cond2 .) ]


state 98

    (33) Cond2 -> Cond2 AND Cond3 .
    (34) Cond2 -> Cond3 .

  ! reduce/reduce conflict for OR resolved using rule 33 (Cond2 -> Cond2 AND Cond3 .)
  ! reduce/reduce conflict for ) resolved using rule 33 (Cond2 -> Cond2 AND Cond3 .)
  ! reduce/reduce conflict for AND resolved using rule 33 (Cond2 -> Cond2 AND Cond3 .)
    )               reduce using rule 33 (Cond2 -> Cond2 AND Cond3 .)
    OR              reduce using rule 33 (Cond2 -> Cond2 AND Cond3 .)
    AND             reduce using rule 33 (Cond2 -> Cond2 AND Cond3 .)

  ! OR              [ reduce using rule 34 (Cond2 -> Cond3 .) ]
  ! )               [ reduce using rule 34 (Cond2 -> Cond3 .) ]
  ! AND             [ reduce using rule 34 (Cond2 -> Cond3 .) ]


state 99

    (39) ExpRelacional -> Exp > Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    )               reduce using rule 39 (ExpRelacional -> Exp > Exp .)
    OR              reduce using rule 39 (ExpRelacional -> Exp > Exp .)
    AND             reduce using rule 39 (ExpRelacional -> Exp > Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 100

    (41) ExpRelacional -> Exp > = . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 112
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 101

    (40) ExpRelacional -> Exp < Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    )               reduce using rule 40 (ExpRelacional -> Exp < Exp .)
    OR              reduce using rule 40 (ExpRelacional -> Exp < Exp .)
    AND             reduce using rule 40 (ExpRelacional -> Exp < Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 102

    (42) ExpRelacional -> Exp < = . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 113
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 103

    (44) ExpRelacional -> Exp = = . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 114
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 104

    (43) ExpRelacional -> Exp ! = . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Exp                            shift and go to state 115
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 105

    (13) Ids -> ID [ ID . ]

    ]               shift and go to state 116


state 106

    (14) Ids -> ID [ NUM . ]

    ]               shift and go to state 117


state 107

    (18) Instruction -> INT ID [ ID ] TERMINATOR .

    ENDBODY         reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)
    INT             reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)
    ID              reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)
    REPEAT          reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)
    IF              reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)
    PRINT           reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)
    READ            reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)
    }               reduce using rule 18 (Instruction -> INT ID [ ID ] TERMINATOR .)


state 108

    (21) Atr -> ID [ ID ] = Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    TERMINATOR      reduce using rule 21 (Atr -> ID [ ID ] = Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 109

    (22) Atr -> ID [ NUM ] = Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    TERMINATOR      reduce using rule 22 (Atr -> ID [ NUM ] = Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 110

    (30) Repeat -> REPEAT { Instructions } UNTIL ( . Cond )
    (31) Cond -> . Cond OR Cond2
    (32) Cond -> . Cond2
    (33) Cond2 -> . Cond2 AND Cond3
    (34) Cond2 -> . Cond3
    (35) Cond3 -> . NOT Cond
    (36) Cond3 -> . ExpRelacional
    (37) Cond3 -> . Cond
    (38) Cond3 -> .
    (39) ExpRelacional -> . Exp > Exp
    (40) ExpRelacional -> . Exp < Exp
    (41) ExpRelacional -> . Exp > = Exp
    (42) ExpRelacional -> . Exp < = Exp
    (43) ExpRelacional -> . Exp ! = Exp
    (44) ExpRelacional -> . Exp = = Exp
    (45) ExpRelacional -> . Exp
    (46) Exp -> . Exp + Termo
    (47) Exp -> . Exp - Termo
    (48) Exp -> . Termo
    (49) Termo -> . Termo * Fator
    (50) Termo -> . Termo / Fator
    (51) Termo -> . Fator
    (52) Fator -> . ( Exp )
    (53) Fator -> . NUM
    (54) Fator -> . ID

    NOT             shift and go to state 55
    AND             reduce using rule 38 (Cond3 -> .)
    )               reduce using rule 38 (Cond3 -> .)
    OR              reduce using rule 38 (Cond3 -> .)
    (               shift and go to state 47
    NUM             shift and go to state 48
    ID              shift and go to state 43

    Cond                           shift and go to state 118
    Cond2                          shift and go to state 53
    Cond3                          shift and go to state 54
    ExpRelacional                  shift and go to state 56
    Exp                            shift and go to state 57
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46

state 111

    (27) If -> IF ( Cond ) { Instructions . } Else
    (15) Instructions -> Instructions . Instruction
    (17) Instruction -> . BodyDecl
    (18) Instruction -> . INT ID [ ID ] TERMINATOR
    (19) Instruction -> . Atr TERMINATOR
    (23) Instruction -> . Repeat
    (24) Instruction -> . If
    (25) Instruction -> . Print TERMINATOR
    (26) Instruction -> . Read TERMINATOR
    (6) BodyDecl -> . INT DeclDef TERMINATOR
    (20) Atr -> . ID = Exp
    (21) Atr -> . ID [ ID ] = Exp
    (22) Atr -> . ID [ NUM ] = Exp
    (30) Repeat -> . REPEAT { Instructions } UNTIL ( Cond )
    (27) If -> . IF ( Cond ) { Instructions } Else
    (55) Print -> . PRINT ( NUM )
    (56) Print -> . PRINT ( Ids )
    (57) Read -> . READ ( Ids )

    }               shift and go to state 119
    INT             shift and go to state 14
    ID              shift and go to state 15
    REPEAT          shift and go to state 21
    IF              shift and go to state 22
    PRINT           shift and go to state 23
    READ            shift and go to state 24

    Instruction                    shift and go to state 12
    BodyDecl                       shift and go to state 13
    Atr                            shift and go to state 16
    Repeat                         shift and go to state 17
    If                             shift and go to state 18
    Print                          shift and go to state 19
    Read                           shift and go to state 20

state 112

    (41) ExpRelacional -> Exp > = Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    )               reduce using rule 41 (ExpRelacional -> Exp > = Exp .)
    OR              reduce using rule 41 (ExpRelacional -> Exp > = Exp .)
    AND             reduce using rule 41 (ExpRelacional -> Exp > = Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 113

    (42) ExpRelacional -> Exp < = Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    )               reduce using rule 42 (ExpRelacional -> Exp < = Exp .)
    OR              reduce using rule 42 (ExpRelacional -> Exp < = Exp .)
    AND             reduce using rule 42 (ExpRelacional -> Exp < = Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 114

    (44) ExpRelacional -> Exp = = Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    )               reduce using rule 44 (ExpRelacional -> Exp = = Exp .)
    OR              reduce using rule 44 (ExpRelacional -> Exp = = Exp .)
    AND             reduce using rule 44 (ExpRelacional -> Exp = = Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 115

    (43) ExpRelacional -> Exp ! = Exp .
    (46) Exp -> Exp . + Termo
    (47) Exp -> Exp . - Termo

    )               reduce using rule 43 (ExpRelacional -> Exp ! = Exp .)
    OR              reduce using rule 43 (ExpRelacional -> Exp ! = Exp .)
    AND             reduce using rule 43 (ExpRelacional -> Exp ! = Exp .)
    +               shift and go to state 65
    -               shift and go to state 66


state 116

    (13) Ids -> ID [ ID ] .

    )               reduce using rule 13 (Ids -> ID [ ID ] .)


state 117

    (14) Ids -> ID [ NUM ] .

    )               reduce using rule 14 (Ids -> ID [ NUM ] .)


state 118

    (30) Repeat -> REPEAT { Instructions } UNTIL ( Cond . )
    (31) Cond -> Cond . OR Cond2
    (37) Cond3 -> Cond .

  ! shift/reduce conflict for ) resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               shift and go to state 120
    OR              shift and go to state 74
    AND             reduce using rule 37 (Cond3 -> Cond .)

  ! )               [ reduce using rule 37 (Cond3 -> Cond .) ]
  ! OR              [ reduce using rule 37 (Cond3 -> Cond .) ]


state 119

    (27) If -> IF ( Cond ) { Instructions } . Else
    (28) Else -> . ELSE { Instructions }
    (29) Else -> .

    ELSE            shift and go to state 122
    ENDBODY         reduce using rule 29 (Else -> .)
    INT             reduce using rule 29 (Else -> .)
    ID              reduce using rule 29 (Else -> .)
    REPEAT          reduce using rule 29 (Else -> .)
    IF              reduce using rule 29 (Else -> .)
    PRINT           reduce using rule 29 (Else -> .)
    READ            reduce using rule 29 (Else -> .)
    }               reduce using rule 29 (Else -> .)

    Else                           shift and go to state 121

state 120

    (30) Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .

    ENDBODY         reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)
    INT             reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)
    ID              reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)
    REPEAT          reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)
    IF              reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)
    PRINT           reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)
    READ            reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)
    }               reduce using rule 30 (Repeat -> REPEAT { Instructions } UNTIL ( Cond ) .)


state 121

    (27) If -> IF ( Cond ) { Instructions } Else .

    ENDBODY         reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)
    INT             reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)
    ID              reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)
    REPEAT          reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)
    IF              reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)
    PRINT           reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)
    READ            reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)
    }               reduce using rule 27 (If -> IF ( Cond ) { Instructions } Else .)


state 122

    (28) Else -> ELSE . { Instructions }

    {               shift and go to state 123


state 123

    (28) Else -> ELSE { . Instructions }
    (15) Instructions -> . Instructions Instruction
    (16) Instructions -> .

    }               reduce using rule 16 (Instructions -> .)
    INT             reduce using rule 16 (Instructions -> .)
    ID              reduce using rule 16 (Instructions -> .)
    REPEAT          reduce using rule 16 (Instructions -> .)
    IF              reduce using rule 16 (Instructions -> .)
    PRINT           reduce using rule 16 (Instructions -> .)
    READ            reduce using rule 16 (Instructions -> .)

    Instructions                   shift and go to state 124

state 124

    (28) Else -> ELSE { Instructions . }
    (15) Instructions -> Instructions . Instruction
    (17) Instruction -> . BodyDecl
    (18) Instruction -> . INT ID [ ID ] TERMINATOR
    (19) Instruction -> . Atr TERMINATOR
    (23) Instruction -> . Repeat
    (24) Instruction -> . If
    (25) Instruction -> . Print TERMINATOR
    (26) Instruction -> . Read TERMINATOR
    (6) BodyDecl -> . INT DeclDef TERMINATOR
    (20) Atr -> . ID = Exp
    (21) Atr -> . ID [ ID ] = Exp
    (22) Atr -> . ID [ NUM ] = Exp
    (30) Repeat -> . REPEAT { Instructions } UNTIL ( Cond )
    (27) If -> . IF ( Cond ) { Instructions } Else
    (55) Print -> . PRINT ( NUM )
    (56) Print -> . PRINT ( Ids )
    (57) Read -> . READ ( Ids )

    }               shift and go to state 125
    INT             shift and go to state 14
    ID              shift and go to state 15
    REPEAT          shift and go to state 21
    IF              shift and go to state 22
    PRINT           shift and go to state 23
    READ            shift and go to state 24

    Instruction                    shift and go to state 12
    BodyDecl                       shift and go to state 13
    Atr                            shift and go to state 16
    Repeat                         shift and go to state 17
    If                             shift and go to state 18
    Print                          shift and go to state 19
    Read                           shift and go to state 20

state 125

    (28) Else -> ELSE { Instructions } .

    ENDBODY         reduce using rule 28 (Else -> ELSE { Instructions } .)
    INT             reduce using rule 28 (Else -> ELSE { Instructions } .)
    ID              reduce using rule 28 (Else -> ELSE { Instructions } .)
    REPEAT          reduce using rule 28 (Else -> ELSE { Instructions } .)
    IF              reduce using rule 28 (Else -> ELSE { Instructions } .)
    PRINT           reduce using rule 28 (Else -> ELSE { Instructions } .)
    READ            reduce using rule 28 (Else -> ELSE { Instructions } .)
    }               reduce using rule 28 (Else -> ELSE { Instructions } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ) in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 53 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 96 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for ) in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: reduce/reduce conflict in state 76 resolved using rule (Cond3 -> NOT Cond)
WARNING: rejected rule (Cond3 -> Cond) in state 76
WARNING: reduce/reduce conflict in state 97 resolved using rule (Cond -> Cond OR Cond2)
WARNING: rejected rule (Cond -> Cond2) in state 97
WARNING: reduce/reduce conflict in state 98 resolved using rule (Cond2 -> Cond2 AND Cond3)
WARNING: rejected rule (Cond2 -> Cond3) in state 98
