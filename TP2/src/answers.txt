---------------------------1-----------------------------
-----> ler 4 numeros e dizer se podem ser os lados de um quadrado. --> CHECK (0 not ok 1 ok)
STARTDECL
int a,b,c,d;
ENDDECL
STARTBODY
if(a == b == c == d){
    print(0); /* success */
}
ENDBODY

/* versao 2 */
STARTDECL
int a,b,c,d,res;
ENDDECL
STARTBODY
read(a);
read(b);
read(c);
read(d);
res = 0;
if(a == b){
    if(b==c){
        if(c==d){
            res = 1; 
        }
    }
}
if(a==b and b==c and c==d) res = 1;
print(res);
ENDBODY
---------------------------2-----------------------------
-------> ler um inteiro N, depois ler N numeros e escrever o menor deles. --> CHECK
STARTDECL
int n, num, min;
ENDDECL
STARTBODY
read(n);
read(min);
repeat{
    read(num);
    if(min > num){
        min = num;
    }
    n = n - 1; 
}until(n>0)             
print (min);
ENDBODY
---------------------------3-----------------------------
ler N (constante do programa) numeros e calcular e imprimir o seu produtorio --> CHECK

STARTDECL
int prod,n;
ENDDECL
STARTBODY
prod = 1;
repeat{
    read(n);
    prod = prod * n;  --> falha porque quando metemos 0 multiplica por 0
}until(n==1)
print (prod);
ENDBODY

---------------------------4-----------------------------

contar e imprimir os numeros impares de uma sequencia de numeros naturais --> CHECK

STARTDECL
int n,num, cont;
ENDDECL
STARTBODY
cont = 0;
read(n);
repeat{
    read(num);
    if(num % 2 == 1){
        cont = cont + 1;
        print(num);        
    }
    n = n - 1; 
}until(n==0)
print (cont);
ENDBODY

---------------------------5-----------------------------

â€¢ ler e armazenar N numeros num array; imprimir os valores por ordem inversa.  --> CHECK

STARTDECL
int n,num,cont;
ENDDECL
STARTBODY
read(n); 
int a[n]; 
cont = 0;
repeat{
    read(num);
    a[cont] = num;
    cont = cont + 1;
    n = n - 1;
}until(n>0)
cont = cont - 1;
repeat{
    print(a[cont]);
    cont = cont - 1;
}until(cont>=0)
ENDBODY
